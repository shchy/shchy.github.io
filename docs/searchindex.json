{"categories":[],"posts":[{"content":"デプロイの確認 まだアプリのコンテナレジストリどうするか問題があるのでk8sのクイックスタートをなぞって動作確認を行う。\nコマンド kubectl create deployment hello-server --image=gcr.io/google-samples/hello-app:1.0 kubectl expose deployment hello-server --type LoadBalancer --port 80 --target-port 8080  繋がらない 上記で作成したhello-serverserviceを確認すると外部IPがpendingのまま変わらない。 多分digitaloceanでDropletに割り当てられてるIPは１つだから外部IPの取得ができなくて困ってるんだろう。\n他のserviceを確認するとtraefikというサービスが唯一の外部IPをポート80で使用している。\nのでポートを変えてみる。\nkubectl expose deployment hello-server --type LoadBalancer --port 8080 --target-port 8080  繋がった。\ntraefikて何なん Ingressだって。\nじゃあIngress経由で公開してみよう。\nhello-serverのserviceをClusterIPに変更してポートも元に戻す kubectl expose deployment hello-server --type ClusterIP --port 80 --target-port 8080  ingress.ymlを作成 apiVersion: networking.k8s.io/v1 kind: Ingress metadata: name: ingress annotations: ingress.kubernetes.io/ssl-redirect: \u0026quot;true\u0026quot; spec: rules: - http: paths: - path: / pathType: Prefix backend: service: name: hello-server port: number: 80  ingressを配置 kubectl apply -f ingress.yml  繋がった ","id":0,"section":"posts","summary":"デプロイの確認 まだアプリのコンテナレジストリどうするか問題があるのでk8sのクイックスタートをなぞって動作確認を行う。 コマンド kubectl create deployment hello-server --image=gcr.io/google-samples/hello-app:1.0 kubectl expose","tags":["52steps","k9s","k3s","digitalocean"],"title":"続k3s","uri":"https://shchy.github.io/2021/05/20210502/","year":"2021"},{"content":"動機 アプリをホストするサーバはDigitalOceanにする。\n仕事ではなんとなくAWSが多い気がするが、おじさんはメジャーなものはあんまり好きじゃないのである。\nDigitalOceanは５年くらい無駄に五百円払い続けてたという実績を持っているのでベテランである。\nk8sならどこで動いているかはあんまり関係ないのである。（コンピューティングサービス使うだけなら）\nと思ったらk8sを使うには1000円💵かかる。ワンコイン🪙じゃないのか。\n社内に作ったのと同じように500円サーバにk8sをbaremetalで構築すれば良いのではないかと閃いたが、500円では1cpuなので無理っぽい。\nこの機会にk3sを試してみた。\n手順   アカウント作ってCreateボタンからDropletを選択\n  Choose an imageからUbuntuを選択\n  AuthenticationのNew SSHKeyボタン押して接続用のkeyを入力\n※済なら選ぶだけ\n※他のCPUとかの設定は値段を気にしながら適当に選ぶ\n  作ったDropletを選択するとIPが確認できる(赤い塗りつぶしのとこ)のでSSH接続する\nssh root@\u0026lt;IP\u0026gt;\n  k3sをインストール\n  curl -sfL https://get.k3s.io | sh -  configファイルのダウンロード\n\u0026lt;IP\u0026gt;の箇所を接続IPに書き換えて出力された内容をローカルの~/.kube/configに配置  cat /etc/rancher/k3s/k3s.yaml | sed s/127.0.0.1/\u0026lt;IP\u0026gt;/  接続確認\nssh切断してローカルでkubectlとかk9sが使えるかどうか確認  kubectl get all -A  感想 応答がめちゃ遅い。\nrancherOSにしてDockerイメージを単体で起動する形にすべきだろうか。\nでもDBイメージとか複数起動したりするのめんどい。k8s使いたい。\n500円はやはり無謀なのだろうか。\nk3sはエッジなハードウェアでk8sクラスタを起動する用途なので（多分）低スペックな環境でどこまでイケるかしばらく試してみよう。\n","id":1,"section":"posts","summary":"動機 アプリをホストするサーバはDigitalOceanにする。 仕事ではなんとなくAWSが多い気がするが、おじさんはメジャーなものはあんまり好","tags":["52steps","k9s","k3s","digitalocean"],"title":"K3S🛴","uri":"https://shchy.github.io/2021/05/20210501/","year":"2021"},{"content":"画面イメージ作成 Blogの各種連携は完了し、サボり監視ツールの制作は一ミリ進んだ🤥\ninVision使ってみたけど作図はフリーハンドでしかできない気がしたのでやめてMarvelで画面イメージを作り始めた。\n内容  年間カレンダーを54コマ（週数）にして週末の数を可視化 言うても毎週活動するのはきついからサボる割合を設定 達成したい事とその見積もりをざっくりコマ数で入力 サボり率を考慮して54コマに達成したい事を並べて完了予想日を可視化 意外とすごい期間かかるんですね。を再認識させてくれる小泉さんのようなツールを目指したい。  4番目の画面がHome画面になると思うのでそのレイアウトを考えてるけど何も思い浮かばない。🤔\nコマの色だけでサボった／やった／未来を判断できるようにして何をやったかはtooltipとかクリック後に表示するのがいい気がする。\n避けないといけない事 未来の予定とかは入力させない。\nできれば達成したいことも入力させたくないけど「やった／さぼった」だけだと尻叩きにならない気もするのでちょうどいいところを模索する。\nタイトルとコマ数と優先度（ドラッグで上下）くらいでしょうか。\nあとここで言うやりたい事リストをアチーブメントリストとするのは英語的に違和感があるものでしょうか。\nおじさんの気づき ちょっとしたものなのになんだかめんど過ぎませんか。\n仕事との違いはUIを自由にして良いのがきっと原因だ。\n制約がないと無限にいい案考えてるフリで終わってしまう。\n仕様上の制約がないから時間の制約をつけるしかないよね。\n","id":2,"section":"posts","summary":"画面イメージ作成 Blogの各種連携は完了し、サボり監視ツールの制作は一ミリ進んだ🤥 inVision使ってみたけど作図はフリーハンドでしかでき","tags":["無駄口","52steps"],"title":"サボり監視","uri":"https://shchy.github.io/2021/04/20210425/","year":"2021"},{"content":"GoogleのBloggerでこのブログを始めてすぐに（3/28くらい）申請して、先週(4/16)にメールで通知されました。\nGW明けまでに1円ゲットの夢が潰えた。\nアクセス解析してたら自分しか見てなかったし、センセイからもご指導を受けてたので想定してたけど残念。\nもう少し運用してから再申請することにする。\nついでにBloggerはMarkdown使えないし（※）テンプレート少ないしGithub.ioとHugoで運用していくことにする。\n※変換ツール使ってHTMLで保存すればイケるけど修正がめんどい。\n記事数が少ない内にHTMLをMarkdownに手動で戻して移行完了。\n明日はGoogle Analyticsとの連携とかBloggerスペースの削除とかを実施予定。\nサボり監視ツールの制作は一ミリも進んでいない。さすがである。\ninVisionで画面イメージでも作ってみようと思う。\n","id":3,"section":"posts","summary":"GoogleのBloggerでこのブログを始めてすぐに（3/28くらい）申請して、先週(4/16)にメールで通知されました。 GW明けまでに1","tags":["無駄口"],"title":"Google AdSenseの審査に落ちた","uri":"https://shchy.github.io/2021/04/20210423/","year":"2021"},{"content":"弱点なくなるじゃんね。\nバックエンドにgoを選択したのは何かのお導きだったのか。\nhttps://go.googlesource.com/proposal/+/refs/heads/master/design/43651-type-parameters.md\nによると2022年の1.18バージョンで正式リリースされるとのこと。\n既存のライブラリを利用したコードでも支障なく動くのかが気になるところであるが、以下によると「デザインはGo1と完全な下位互換性があります。」とあるのできっといけるはず。\nhttps://go.googlesource.com/proposal/+/refs/heads/master/design/go2draft-contracts.md\nhttps://medium.com/eureka-engineering/golang-generics-design-draft-linked-list-4d1174e2355d\n上記ブログの手順をやってみた。\ngo2goブランチでgoをビルド mkdir ~/go2go \u0026amp;\u0026amp; cd go2go git clone https://go.googlesource.com/go goroot \u0026amp;\u0026amp; cd goroot git fetch git checkout dev.go2go cd src ./make.bash echo 'export PATH=\u0026quot;$HOME/go2go/goroot/bin:$PATH\u0026quot;' \u0026gt;\u0026gt; ~/.zshrc source ~/.zshrc  動かない 動いた（2021/04/27追記） go tool go2go run main.go2 cannot find package \u0026quot;run\u0026quot; in any of: ... /Users/user/go2go/goroot/bin/go [run run main.go] failed: exit status 1  [run run main.go]て何？run main.goが正しいのでは。\n2021/04/27追記\nrun runはバグでした。\n最新をpullして実行したらgo tool go2go run main.go2で動きましたが、やはりfiber使ったコードではエラーになる。\n動いた バグなのかなってことでtranslateでgoファイルに変換して自分でrunするとうまくいった。\ngo tool go2go translate main.go2で変換コードを確認してみる。\nGenericな関数もちゃんと変換されてる\ngo tool go2go translate main.go2 go run main.go  package main import \u0026quot;fmt\u0026quot; func Print[T any](s []T) { for _, v := range s { fmt.Println(v) } } func main() { Print([]int{1, 2, 3, 4, 5}) println(\u0026quot;hello\u0026quot;) }  // Code generated by go2go; DO NOT EDIT. //line main.go2:1 package main //line main.go2:1 import \u0026quot;fmt\u0026quot; //line main.go2:11 func main() { //line main.go2:11 instantiate୦୦Print୦int([]int{1, 2, 3, 4, 5}) //line main.go2:13 println(\u0026quot;hello\u0026quot;) } //line main.go2:5 func instantiate୦୦Print୦int(s []int,) { for _, v := range s { fmt.Println(v) } } //line main.go2:9 type Importable୦ int //line main.go2:9 var _ = fmt.Errorf  でもこれだと他のジェネレータ系と変わらないね\n作り始めたfiberサーバにそのまま使えるのか 結論だけ言うとうまくいかなかった。\nimportGo1Packageってとこで死んでるので既存ライブラリのインポートに失敗してるっぽい。\ngo2goは実験用ブランチみたいだからプレビューバージョンくらいになるまでは大人しくジェネレータ使うことにしよう。\n","id":4,"section":"posts","summary":"弱点なくなるじゃんね。 バックエンドにgoを選択したのは何かのお導きだったのか。 https://go.googlesource.com/proposal/+/refs/heads/master/design/43651-type-parameters.md によると2022年の1.18バージョンで正式リリースされると","tags":["go","tech"],"title":"goにgenricsが来るらしい","uri":"https://shchy.github.io/2021/04/20210410/","year":"2021"},{"content":"どれにしよう Vueは2も3も使ってみた事がある。\nangularはangularDartで使ったことがある。\nreactは使ったことない。\nstackoverflowの比較\n\nreactなのか。しかしながら、おじさんはメジャーな奴は好きではないのである。\ndartのBLOCパターンを使ってみたいので結果を無視してflutterにしてみる。\n\n２位だし。（多分Webだけじゃないけど）\nSPAのSEO対策について 昔SPAはSEO的に不利と見た覚えがある。\nhttps://www.codit.work/notes/mhpxxkeqv4qhzfjecmrn/\nもう結構平気みたい。\n構築手順 公式サイトに沿って進めるだけ。\nhttps://flutter.dev/docs/get-started/web\ncd ~/development curl -LO https://storage.googleapis.com/flutter_infra/releases/stable/macos/flutter_macos_2.0.4-stable.zip unzip ~/development/flutter_macos_2.0.4-stable.zip echo \u0026quot;export PATH=\\$PATH:$(pwd)/flutter/bin\u0026quot; \u0026gt;\u0026gt; ~/.zshrc source ~/.zshrc rm ~/development/flutter_macos_2.0.4-stable.zip  flutter doctor で依存関係のステータス確認 Running \u0026quot;flutter pub get\u0026quot; in flutter_tools... 3.3s Doctor summary (to see all details, run flutter doctor -v): [✓] Flutter (Channel stable, 2.0.4, on macOS 11.3 20E5217a darwin-x64, locale ja-JP) [✗] Android toolchain - develop for Android devices ✗ Unable to locate Android SDK. Install Android Studio from: https://developer.android.com/studio/index.html On first launch it will assist you in installing the Android SDK components. (or visit https://flutter.dev/docs/get-started/install/macos#android-setup for detailed instructions). If the Android SDK has been installed to a custom location, please use `flutter config --android-sdk` to update to that location. [✗] Xcode - develop for iOS and macOS ✗ Xcode installation is incomplete; a full installation is necessary for iOS development. Download at: https://developer.apple.com/xcode/download/ Or install Xcode via the App Store. Once installed, run: sudo xcode-select --switch /Applications/Xcode.app/Contents/Developer sudo xcodebuild -runFirstLaunch ✗ CocoaPods not installed. CocoaPods is used to retrieve the iOS and macOS platform side\u0026amp;#39;s plugin code that responds to your plugin usage on the Dart side. Without CocoaPods, plugins will not work on iOS or macOS. For more info, see https://flutter.dev/platform-plugins To install see https://guides.cocoapods.org/using/getting-started.html#installation for instructions. [✓] Chrome - develop for the web [!] Android Studio (not installed) [✓] VS Code (version 1.54.3) [✓] Connected device (1 available) ! Doctor found issues in 3 categories.  [✓] Chrome - develop for the webがオッケーならよさそう。\nflutter devices でデバイスが有効になっていることを確認 1 connected device: Chrome (web) • chrome • web-javascript • Google Chrome 89.0.4389.114  アプリ作成 flutter create clientapp  起動確認 cd clientapp flutter run -d chrome  コードがリアルタイムに反映されるので開発も楽そう。\n","id":5,"section":"posts","summary":"どれにしよう Vueは2も3も使ってみた事がある。 angularはangularDartで使ったことがある。 reactは使ったことない。 sta","tags":["52steps","tech","web","flutter"],"title":"フロントエンドの選択","uri":"https://shchy.github.io/2021/04/20210404/","year":"2021"},{"content":"サボりを可視化する何かを作ることにした。\nアレもコレもとつけたくなってしまうがグッと堪えて完成を優先する。(センセイの教え)\nバックエンドサーバに何を使うかの検討するためにベンチマーク見てみた。\n普段はgoのechoを使っているのである。\n\nネイティブビルドのC++、Rust、Goが早い傾向にあるのであった。\nDBはpostgres一択の様子。JavaとC#が上位に１件ずついるのは無視してやはりGoを使うのである。\nただechoはまあまあ遅いことがわかったのでランキング上位で使いやすそうなfiberを使うことにする。\n","id":6,"section":"posts","summary":"サボりを可視化する何かを作ることにした。 アレもコレもとつけたくなってしまうがグッと堪えて完成を優先する。(センセイの教え) バックエンドサーバ","tags":["無駄口"],"title":"バックエンドサーバの選択","uri":"https://shchy.github.io/2021/04/20210403/","year":"2021"},{"content":"永遠に寝てた。おじさんのリアルである。\nダメなところを隠すと反省につながらないのである。\n今からやればと思うじゃん？\n珍しく地元のお友達に呼ばれたのでこの後は出かけるのである。\nしかし2日目にしてこの流れは大変良くないので、サボりを可視化する何かを作ろう。\n","id":7,"section":"posts","summary":"永遠に寝てた。おじさんのリアルである。 ダメなところを隠すと反省につながらないのである。 今からやればと思うじゃん？ 珍しく地元のお友達に呼ばれた","tags":["無駄口"],"title":"2日目","uri":"https://shchy.github.io/2021/03/20210329/","year":"2021"},{"content":"会社の後輩の有能なクソガキがニートになると聞いて余計なお世話をしに行ったけど思いのほかキラキラニートだったのでおじさんもキラキラニートを目指すことにした。\nクソガキは前々から個人で稼ぐ事を目指していた。\nそんなクソガキに「誰もが通る道じゃよ、おじさんもそうじゃった。気持ちはわかる。でもニートは悪手じゃ。せめて何か形になるまでは給与もらいながらサイドビジネスにしたらあかんか？」と、かつておじさん自身が上司に言われた事を伝言ゲームしに行ったが、クソガキは既に小規模ながらも形にしていた。なんとゼロをイチにしていたのだ。\n「イチを増やすのに時間がいるからニートになる」のだそうだ。カッコイイ！おじさんを置いていかないで！\nセンセイによるとブログは個人の情報発信拠点として有用だからやりなさいとのこと、始めました。\nまずはGW明けまでに一円でも稼ぐことを目標にする。\n","id":8,"section":"posts","summary":"会社の後輩の有能なクソガキがニートになると聞いて余計なお世話をしに行ったけど思いのほかキラキラニートだったのでおじさんもキラキラニートを目指","tags":["無駄口"],"title":"一歩目","uri":"https://shchy.github.io/2021/03/20210328/","year":"2021"}],"tags":[{"title":"52steps","uri":"https://shchy.github.io/tags/52steps/"},{"title":"digitalocean","uri":"https://shchy.github.io/tags/digitalocean/"},{"title":"flutter","uri":"https://shchy.github.io/tags/flutter/"},{"title":"go","uri":"https://shchy.github.io/tags/go/"},{"title":"k3s","uri":"https://shchy.github.io/tags/k3s/"},{"title":"k9s","uri":"https://shchy.github.io/tags/k9s/"},{"title":"tech","uri":"https://shchy.github.io/tags/tech/"},{"title":"web","uri":"https://shchy.github.io/tags/web/"},{"title":"無駄口","uri":"https://shchy.github.io/tags/%E7%84%A1%E9%A7%84%E5%8F%A3/"}]}